h1.  Pwny Express

Web service to get lat/lng based on ISO country and postal code.
You know...because it has to do with postal codes and it's written in Express.

!https://dl.dropboxusercontent.com/u/92181/dont_delete/clap.gif!

h2. Installing

# Clone repository
# @npm install@
# unzip ./resources/allCountries.zip to ./resources/allCountries.txt
# npm start

h2. Using

http://localhost:3000/postal_codes/[2LETTER-ISO-COUNTRY-UPCASE]/[POSTAL CODE]

_e.g http://localhost:3000/postal_codes/US/33351_

h2. Performance / Scalability

h4.  Running This as an Express App

This proof-of-concept performs remarkably _un-shittyful_ for being a data structure fed by a 69MB text file.
Like, freaky fast. If you're going to want to add any conditional logic or intellegence then you're going 
to obviously want to use Express. Maybe you'll want to customize the data store.

If you put this behind Varnish there'd be no stopping you.
You would crush your enemies, see them driven before you, and hear the lamentation of their women.

h4.  Exporting Static Files

If all you need is lat lng...it seems easy enough to write a script that would generate static files
in a directory structure that would look like the endpoints. I could imaginge serving that content being
the fastest, most stable, and least-engineered way of running your own lat/lng service.

h2.  Data

This data is from "Geonames Postal Code Database":http://download.geonames.org/export/zip/
If it gets out of date - send a PR my way.
